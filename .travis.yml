#Pulls linux machine with JDK installed
language: java
jdk:
- oraclejdk8

# Development source code will be checked out from Github repository 
#as its already implicitly configured as part of travis configuration

# Installs libs/softwares which are required as pre requisites that are not already exist in machine
install:
- echo "************************INSTALLS LIBS/SOFTWARES WHICH ARE REQUIRED AS PRE REQUISITES*******************************"
- sudo apt-get install software-properties-common
- sudo apt-add-repository -y ppa:ansible/ansible
- sudo apt-get update
- sudo apt-get install ansible
- sudo apt install unzip

# Adding required privileges to the files before build get triggers
before_script:
# Staging environment permissions
- echo "************************BEFORE_SCRIPT:ADDING REQUIRED PRIVILEGES TO THE FILES IN STAGING ENVIRONMENT*******************************"
- sudo chmod 700 $TRAVIS_BUILD_DIR/deploy/tomcat.pem
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/staging/ansible.cfg
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/staging/ansible.cfg /etc/ansible/ansible.cfg
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/staging/hosts
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/staging/hosts /etc/ansible/hosts
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/staging/warDeploy.yml
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/staging/warDeploy.yml /etc/ansible/warDeploy.yml
 
# Creates WAR, deploys it in tomcat and triggers test against QA environment
script:
# Maven build - Staging
- echo "************************SCRIPT:TRIGGERS MAVEN BUILD - STAGING*******************************"
- mvn clean package

# Deploys WAR in tomcat - Staging
- echo "************************SCRIPT:DEPLOYS WAR IN TOMCAT - STAGING*******************************"
- cd /etc/ansible
- ansible-playbook warDeploy.yml
- sleep 5m

# Triggers functional test - Staging
- echo "************************SCRIPT:TRIGGERS FUNCTIONAL TEST - STAGING*******************************"
- sudo mkdir /home/travis/build/RajeshkumarAyyadurai/staging/
- sudo chmod 777 /home/travis/build/RajeshkumarAyyadurai/staging
- cd /home/travis/build/RajeshkumarAyyadurai/staging/
- git clone https://github.com/RajeshkumarAyyadurai/securitytestv1.0.git
- cd /home/travis/build/RajeshkumarAyyadurai/staging/securitytestv1.0/
- ls -l /home/travis/build/RajeshkumarAyyadurai/staging/securitytestv1.0/lib/drivers/phantomjs
- chmod 755 /home/travis/build/RajeshkumarAyyadurai/staging/securitytestv1.0/lib/drivers/phantomjs
- cd /home/travis/build/RajeshkumarAyyadurai/staging/securitytestv1.0/
- mvn test

# Creates WAR, deploys it in tomcat and triggers test against production environment when QA deployment success
after_success:
# Adding required privileges to the files before build triggers in production
- echo "************************AFTER_SUCCESS:ADDING REQUIRED PRIVILEGES TO THE FILES IN PRODUCTION ENVIRONMENT*******************************"
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/prod/ansible.cfg
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/prod/ansible.cfg /etc/ansible/ansible.cfg
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/prod/hosts
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/prod/hosts /etc/ansible/hosts
- sudo chmod 777 $TRAVIS_BUILD_DIR/deploy/prod/warDeploy.yml
- sudo mv -f $TRAVIS_BUILD_DIR/deploy/prod/warDeploy.yml /etc/ansible/warDeploy.yml

# Maven build - Production
- echo "************************AFTER_SUCCESS:TRIGGERS MAVEN BUILD - PRODUCTION*******************************"
- cd /home/travis/build/RajeshkumarAyyadurai/security_app_build/
- mvn clean package

# WAR deploy in tomcat - Production
- echo "************************AFTER_SUCCESS:DEPLOYS WAR IN TOMCAT - PRODUCTION*******************************"
- cd /etc/ansible
- ansible-playbook warDeploy.yml
- sleep 5m

# Triggers test against QA environment - Production
- echo "************************AFTER_SUCCESS:TRIGGERS FUNCTIONAL TEST - PRODUCTION*******************************"
- sudo mkdir /home/travis/build/RajeshkumarAyyadurai/prod/
- sudo chmod 777 /home/travis/build/RajeshkumarAyyadurai/prod
- cd /home/travis/build/RajeshkumarAyyadurai/prod/
- git clone https://github.com/RajeshkumarAyyadurai/securitytestv1.0.git
- cd /home/travis/build/RajeshkumarAyyadurai/prod/securitytestv1.0/
- ls -l /home/travis/build/RajeshkumarAyyadurai/prod/securitytestv1.0/lib/drivers/phantomjs
- chmod 755 /home/travis/build/RajeshkumarAyyadurai/prod/securitytestv1.0/lib/drivers/phantomjs
- cd /home/travis/build/RajeshkumarAyyadurai/prod/securitytestv1.0/
- mvn test

# Sends slack notification about the build and its status
notifications:
 slack:
  on_failure: always
  on_success: always
  rooms:
  - sot-neustar:hAZy7jMtJpHHnkjpDPDsYIlD
  template:
  - "Build(#%{build_number}) triggered by %{author} %{result} in %{duration}"
  - "Repository/Branch : %{repository_name}/%{branch}"
  - "Commit : %{commit_message}"
  - "Build URL : %{build_url}"
